@model IEnumerable<EmployeeList_MVC.Models.JobTitle>

@{

    ViewData["Title"] = "Index";

    Pager pager = new Pager();

    int pageNo = 0;

    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }


}

<div class="col-md-8 offset-md-2">

    <h1 class="text-center"><i class="fas fa-comments-dollar text-success"></i> JobTitle History</h1>

    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px;">
        <div>
            <label for="entriesPerPage">Entries per page:</label>
            <select class="form-control" id="entriesPerPage" name="entriesPerPage" onchange="submitForm()">
                <option value="5">5</option>
                <option value="10">10</option>
                <option value="20">20</option>
            </select>
        </div>

        <div>
            <form id="searchForm" asp-controller="JobTitle" asp-action="Index" method="get">
                <div class="form-group">
                    <label for="search">Search:</label>
                    <input type="text" class="form-control" id="search" name="searchQuery" placeholder="Search" value="@ViewData["SearchQuery"]">
                </div>
                <input type="hidden" name="searchQuery" value="@ViewData["SearchQuery"]">
                <button type="submit" style="display: none;"></button>
            </form>
        </div>
    </div>

    <table class="table" data-toggle="table" data-sortable="true" data-search="false">
        <thead class="thead-light">
            <tr>
                <th data-field="JobTitleName" data-sortable="true">Job Title</th>
                <th data-field="JobTitle.Department.DepartmentName" data-sortable="true">Department</th>
                <th>
                    <a onclick="showInPopup('@Url.Action("AddOrEdit","JobTitle",new {id=0},Context.Request.Scheme)','New Employee')" class="btn btn-success text-white"><i class="fas fa-random"></i> New Employee</a>
                </th>
                <!-- Additional th elements for other columns -->
            </tr>
        </thead>
        <tbody>
            <!-- Table body content -->
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.JobTitleName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Department.DepartmentName)
                    </td>
                    <td>
                        <div>
                            <a onclick="showInPopup('@Url.Action("AddOrEdit","JobTitle",new {id=item.ID},Context.Request.Scheme)','Update JobTitle')" class="btn btn-sm btn-info text-white"><i class="fas fa-pencil-alt"></i> Edit</a>
                            <a onclick="showInPopup('@Url.Action("Delete","JobTitle",new {id=item.ID},Context.Request.Scheme)','Delete JobTitle')" class="btn btn-sm btn-danger text-white"><i class="fas fa-pencil-alt"></i> Delete</a>

                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="container">
        @if (pager.TotalPages > 0)
        {
            <ul class="pagination justify-content-end">
                @for (var pge = pager.StartPage; pge <= pager.EndPage; pge++)
                {
                    <li class="page-item @(pge == pager.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-controller="JobTitle" asp-action="Index" asp-route-pg="@pge" asp-route-entriesPerPage="@ViewData["EntriesPerPage"]"
                           asp-route-searchQuery="@ViewData["SearchQuery"]">
                            @pge
                        </a>
                    </li>

                }
            </ul>
        }
    </div>
</div>


<script>
    function submitForm() {
        var searchQuery = document.getElementById('search').value;
        var entriesPerPage = document.getElementById('entriesPerPage').value;
        var url = window.location.pathname + '?searchQuery=' + searchQuery + '&entriesPerPage=' + entriesPerPage;
        window.location.href = url;
    }
</script>

<script>

    function performSearch() {
        var searchText = document.getElementById('search').value.toLowerCase();
        var rows = document.querySelectorAll('tbody tr');

        for (var row of rows) {
            var shouldHide = true;
            var cells = row.getElementsByTagName('td');
            for (var cell of cells) {
                if (cell.textContent.toLowerCase().indexOf(searchText) > -1) {
                    shouldHide = false;
                    break;
                }
            }
            row.style.display = shouldHide ? "none" : "";
        }
    }

    document.addEventListener("DOMContentLoaded", function () {
        var entriesPerPage = @((int)ViewData["EntriesPerPage"]);
        document.getElementById('entriesPerPage').value = entriesPerPage;
    });

    // document.getElementById('entriesPerPage').addEventListener('change', function () {
    //     var selectedValue = this.value;
    //     var url = window.location.pathname + "?entriesPerPage=" + selectedValue;
    //     window.location.href = url;
    // });
</script>